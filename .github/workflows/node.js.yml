name: Deploy to VPS NEST

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    timeout-minutes: 60
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    # - name: Display GitHub Username
    #   run: echo "Repository:" ${{ github.repository }}

    # - name: Display actor Name
    #   run: echo "Actor:" ${{ github.actor }}

    # - name: Display server VPS_IP
    #   run: echo "VPS_IP:" ${{ secrets.VPS_IP }}

    # - name: Display server VPS_PASSWORD
    #   run: echo "VPS_PASSWORD:" ${{ secrets.VPS_PASSWORD }}

    - name: SSH to VPS and update project
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.VPS_IP }}
        username: ${{ secrets.VPS_USERNAME }}
        password: ${{ secrets.VPS_PASSWORD }}  # Sử dụng nếu bạn dùng mật khẩu cho SSH
        # key: ${{ secrets.VPS_SSH_KEY }}  # Sử dụng nếu bạn dùng khóa SSH
        script: |
          # echo "Checking if the project directory exists..."
          # if [ -d "/root/selcoool_010924" ]; then
            echo "Tồn tại thư mục dự án"
            cd /root/selcoool_010924
      
            git pull
            rm -rf .next
            unzip .next.zip -d ./
            docker-compose -f  docker-compose-selcoool_010924.yml up -d --build
            cd ~
            docker-compose -f docker-compose-nginx.yml restart nginx

          # else          
          #   echo "Không hề tồn tại thư mục dự án"
          #   mkdir -p /root/selcoool_010924
          #   cd /root/selcoool_010924

          #   git clone https://github.com/${{ github.repository }} /root/selcool_010924
          #   docker-compose -f  docker-compose-selcoool_010924.yml up -d --build
          #   cd ~
          #   docker-compose -f docker-compose-nginx.yml restart nginx
          # fi
          # echo "Hoàn thành công việc update API backend_040824. Chúc mừng bạn đã hoàn thành"

        # script: |
        #   echo "Xoa thu muc du an"
        #   rm -rf /root/backend_040824
        #   echo "Xoa images and container"
          
        #   docker stop $(docker ps -aq) || true
        #   docker rm $(docker ps -aq) || true
        #   docker rmi $(docker images -q) || true
        #   docker-compose -f docker-compose-api-backend_040824.yml down
        #   docker system prune -a -f
        #   sudo systemctl restart docker
        #   echo "Xoa du an 1"

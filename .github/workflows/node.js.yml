name: Deploy to VPS NEST1

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    timeout-minutes: 60
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: SSH to VPS and update project
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.VPS_IP }}
        username: ${{ secrets.VPS_USERNAME }}
        password: ${{ secrets.VPS_PASSWORD }}  # Comment out if using SSH key
        # key: ${{ secrets.VPS_SSH_KEY }}     # Uncomment if using an SSH key
        script: |
          echo "Starting deployment process..."
          
          if [ -d "/root/selcool_010924" ]; then
            echo "Project directory exists. Pulling latest changes..."
            cd /root/selcool_010924 || exit 1
            git pull || { echo "Failed to pull changes"; exit 1; }
            
            echo "Removing old build..."
            rm -rf .next
            
            echo "Unzipping new build..."
            unzip .next.zip -d ./ || { echo "Unzipping failed"; exit 1; }
            
            echo "Rebuilding and restarting Docker containers..."
            docker-compose -f docker-compose-selcool_010924.yml up -d --build || { echo "Docker build failed"; exit 1; }

            # Return to the root directory before restarting Nginx
            cd ~ || exit 1
            docker-compose -f docker-compose-nginx.yml restart nginx || { echo "Nginx restart failed"; exit 1; }

          else
            echo "Project directory does not exist. Cloning repository..."
            mkdir -p /root/selcool_010924
            cd /root/selcool_010924 || exit 1
            
            git clone https://github.com/${{ github.repository }} . || { echo "Git clone failed"; exit 1; }
            
            echo "Building and starting Docker containers..."
            docker-compose -f docker-compose-selcool_010924.yml up -d --build || { echo "Docker build failed"; exit 1; }

            # Return to the root directory before restarting Nginx
            cd ~ || exit 1
            docker-compose -f docker-compose-nginx.yml restart nginx || { echo "Nginx restart failed"; exit 1; }
          fi
          
          echo "Deployment complete!"


        # script: |
        #   echo "Xoa thu muc du an"
        #   rm -rf /root/backend_040824
        #   echo "Xoa images and container"
          
        #   docker stop $(docker ps -aq) || true
        #   docker rm $(docker ps -aq) || true
        #   docker rmi $(docker images -q) || true
        #   docker-compose -f docker-compose-api-backend_040824.yml down
        #   docker system prune -a -f
        #   sudo systemctl restart docker
        #   echo "Xoa du an 1"
